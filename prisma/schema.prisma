// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
  TRANSFER
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      Role      @default(USER)
  accounts  Account[]
  sentTransfers     Transaction[] @relation("SenderTransactions")
  receivedTransfers Transaction[] @relation("ReceiverTransactions")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id        String     @id @default(uuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  name      String
  balance   Float      @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  transactions Transaction[]
}

model Transaction {
  id            String           @id @default(uuid())
  type          TransactionType
  amount        Float
  description   String?
  accountId     String
  account       Account          @relation(fields: [accountId], references: [id])

  senderId      String?          
  sender        User?            @relation("SenderTransactions", fields: [senderId], references: [id])
  receiverId    String?          
  receiver      User?            @relation("ReceiverTransactions", fields: [receiverId], references: [id])

  createdAt     DateTime         @default(now())
}
